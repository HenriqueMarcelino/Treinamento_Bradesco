package br.com.stefanini.projetobd.persistence;

import java.sql.PreparedStatement;
import java.util.UUID;

import br.com.stefanini.projetobd.model.Usuario;

public class UsuarioDao extends Dao {

	// Este metodo ele cria o Usuario e não retorna a a chave de identificação.

	public void createUsuario(Usuario u) throws Exception {

		open();

		stmt = con.prepareStatement("insert into usuario values(null,?,?,?,?)");
		stmt.setString(1, u.getNome());
		stmt.setString(2, u.getEmail());
		stmt.setString(3, u.getSenha());
		stmt.setString(4, u.getUuid());
		stmt.execute(); // Esse comando não pode ser esquecido se não ele não executa e não grava na
						// tabela.
		stmt.close();

		close();

	}

	// Este metodo ele criar e retorna a chave de identificação do Usuario.

	public Integer createUsuarioReturn(Usuario u) throws Exception {

		open();

		stmt = con.prepareStatement("insert into usuario values(null,?,?,?,?)",
				PreparedStatement.RETURN_GENERATED_KEYS);
		stmt.setString(1, u.getNome());
		stmt.setString(2, u.getEmail());
		stmt.setString(3, u.getSenha());
		stmt.setString(4, u.getUuid());
		stmt.executeUpdate();
		rs = stmt.getGeneratedKeys();
		rs.next(); // Para dar continuidade ao processo se não ele não retorna o resultado, o comando esta pedindo para dar continuidade.
		int chave = rs.getInt(1);
		stmt.close();
		
		stmt1 = con.prepareStatement("insert into endereco values(null,?,?,?)");
		stmt1.setString(1, u.getEndereco().getBairro());
		stmt1.setString(2, u.getEndereco().getCidade());
		smts1.setInt(3,chave);
		smts1.executeUpdate();
		smts1.close();
	
		close();
		return chave;

	}

	public static void main(String[] args) {
		UsuarioDao dao = new UsuarioDao();
		Usuario usu = new Usuario(null, "Rick", "Rick@gmail.com", "123456", UUID.randomUUID().toString());

		try {
			usu.gerarCriptografia();

			int chave = dao.createUsuarioReturn(usu);
			System.out.println("Dados Gravados");
		} catch (Exception ex) {

		}
	}

}
